<hero-card
  class="mt-16 mb-8 lg:mt-0 lg:mb-0 px-2 sm:px-6 sm:text-center lg:px-64 lg:-mx-64 lg:text-left lg:flex col-span-6 justify-center items-center">
  <div class="mx-auto max-w-sm sm:max-w-xl">
    <div class="relative js-tilt">
      <div class="grid-lines -z-10">
        <div class="right-1/4 vertical" />
        <div class="right-1/2 vertical" />
        <div class="right-3/4 vertical" />
        <div class="top-1/2 horizontal" />
        <div class="right-0 vertical" />
        <div class="bottom-0 horizontal" />
        <div class="left-0 vertical" />
        <div class="top-0 horizontal" />
        <div class="-right-[25%] vertical outer" />
        <div class="-left-[25%] vertical outer" />
      </div>

      <h2 class="sr-only">Testimonial</h2>

      <div
        class="card flex relative flex-col pt-4 pb-8 sm:py-10 px-6 sm:px-12 bg-gradient-to-br from-white via-white to-primary-100 shadow-primary-700">
        <div class="text-2xl sm:text-4xl font-light sm:font-extralight text-neutral-700" style="line-height: 1.8rem;">Rebuilt my
          blog with Astro<br /> out of
          curiosity… <mark class="-ml-2 mt-2 md:ml-0">holy 
            <span class="dense js-bleep">
              <span>■</span><span>■</span><span>■</span><span>■</span>
            </span>!
          </mark>
        </div>
        <div class="bars mt-4">
          <div class="grid grid-cols-11 text-sm sm:text-base items-center" style="--max: 180;">
            <div id="payload-title-1" class="col-span-2 text-right mr-2 py-2 text-neutral-600">
              <h3>Next.js</h3>
            </div>
            <div class="col-span-9 flex items-center">
              <div class="bar shrink bg-violet-400" style="--value: 138;" aria-labelledby="payload-title-1"
                aria-describedby="payload-before" role="progressbar" aria-valuenow="138" aria-valuemin="0"
                aria-valuemax="138" />
              <span id="payload-before" class="ml-2 shrink-0 text-neutral-600 text-sm">138 <abbr title="kilobytes">kB</abbr></span>
            </div>
            <div id="payload-title-2" class="col-span-2 text-right mr-2 py-2 font-bold text-accent-900">
              <h3>Astro</h3>
            </div>
            <div class="col-span-9 flex items-center">
              <div class="bar bg-accent-600" style="--value: 7.6;" aria-labelledby="payload-title-2"
                aria-describedby="payload-after" role="progressbar" aria-valuenow="7.5" aria-valuemin="0"
                aria-valuemax="138" />
              <span id="payload-after" class="ml-2 text-neutral-600 text-sm">7.6 <abbr title="kilobytes">kB</abbr> JavaScript
                page load</span>
            </div>
          </div>
        </div>
        <div
          aria-hidden="true"
          class="absolute top-3.5 right-4 sm:top-4 sm:right-6 fill-neutral-200 -z-10"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" viewBox="0 0 24 24">
            <path
              d="M9.983 3v7.391c0 5.704-3.731 9.57-8.983 10.609l-.995-2.151c2.432-.917 3.995-3.638 3.995-5.849h-4v-10h9.983zm14.017 0v7.391c0 5.704-3.748 9.571-9 10.609l-.996-2.151c2.433-.917 3.996-3.638 3.996-5.849h-3.983v-10h9.983z" />
          </svg>
        </div>
        <a
          class="group"
          href="https://twitter.com/t3dotgg/status/1437195415439360003"
        >
          <span class="absolute bottom-2 right-3 sm:bottom-4 sm:right-6 text-xs text-neutral-600 mt-4 ml-auto no-underline">
            Source: <span class="underline cursor-pointer group-focus:outline outline-offset-2">Theo, CEO @ Ping Labs</span>
          </span>
        </a>
      </div>
    </div>
  </div>
</hero-card>

<style>
  .js-tilt {
    transform: perspective(1000px) rotateX(var(--rot-x, 0deg)) rotateY(var(--rot-y, 0deg)) scale3d(1, 1, 1);
    transform-style: preserve-3d;
    transition: transform 600ms cubic-bezier(0.23, 1, 0.320, 1);
  }

  .js-tilt:hover {
    transition: none;
  }
  .card {
    transform: translateZ(50px);
  }
  .grid-lines>div {
    @apply absolute from-accent-300/0 via-accent-300 to-accent-300/0;
  }

  .grid-lines>.vertical {
    @apply w-px -top-1/2 h-[200%] bg-gradient-to-b;
  }

  .grid-lines>.horizontal {
    @apply h-px -left-1/2 w-[200%] bg-gradient-to-r;
  }

  .grid-lines>.outer {
    @apply via-accent-300/50;
  }

  mark {
    display: inline-flex;
    align-items: center;
    padding: 2px 13.7px;
    -webkit-box-decoration-break: clone;
    margin: 0;
    font-weight: bolder;
    border-radius: 0.3em;
    background: transparent;
    background-image: linear-gradient(to left,
        rgba(255, 225, 0, 0.7),
        rgba(255, 225, 0, 0.3));
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
    white-space: nowrap;
  }

  .dense {
    display: flex;
    align-items: center;
    font-size: 0.75em;
    margin-right: 4px;
    margin-left: 8px;
  }

  .dense > span {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 1.5rem;
    height: 2.25rem;
    line-height: 1.8rem;
    font-size: 0.8em;
    text-align: center;
    background: rgba(255, 255, 255, 0.5);
    border-radius: 4px;
  }
  .dense > span + span {
    margin-left: 2px;
  }

  abbr {
    text-decoration: none;
    color: inherit;
  }

  .bar {
    height: 1.25rem;
    border-radius: 4px;
    width: calc(calc(var(--value) / var(--max)) * 100%);
  }
</style>

<script>
  function clamp(min: number, max: number, t: number) {
    return Math.min(Math.max(t, min), max);
  }
  function lerp(v0: number, v1: number, t: number) {
      return v0*(1-t)+v1*t;
  }
  class HeroCard extends HTMLElement {
    x = 0;
    y = 0;
    rect: DOMRect;
    interval: any;

    constructor() {
      super();
      if (!('matchMedia' in window)) return;
      const motionSafe = window.matchMedia('(prefers-reduced-motion: no-preference)').matches;
      const canHover = window.matchMedia('(hover: hover)').matches;
      if (motionSafe && canHover) {
        window.addEventListener('resize', () => this.resize())
        this.addEventListener('mousemove', (event) => this.move(event as MouseEvent))
        this.addEventListener('mouseleave', (event) => {
          if ((event.target as Element).isSameNode(this)) {
            this.reset()
          }
        })
      }
      if (motionSafe) {
        this.shuffle();
      }
    }

    connectedCallback() {
      this.resize()
    }

    resize() {
      this.rect = this.getBoundingClientRect();
      this.reset();
    }

    shuffle() {
      let chars = '#@?§%&❢★'.split('')
      for (const span of this.querySelectorAll('.js-bleep > span')) {
        let char = chars[Math.floor(Math.random() * chars.length)];
        chars = chars.filter(c => c !== char);
        span.textContent = char;
      }
      setTimeout(() => this.shuffle(), 300);
    }

    move(e: MouseEvent) {
      const x = ((e.pageX - this.rect.left) / this.rect.width) - 0.5;
      const y = ((e.pageY - this.rect.top) / this.rect.height) - 0.5;
      const nx = 5;
      const ny = 7.5;
      const horiztonal = clamp(nx * -1, nx, lerp(nx * -1, nx, x * 2));
      const vertical = clamp(ny * -1, ny, lerp(ny, ny * -1, y * 2));

      requestAnimationFrame(() => {
        this.style.setProperty('--rot-x', `${vertical}deg`)
        this.style.setProperty('--rot-y', `${horiztonal}deg`)
      })
    }

    reset() {
      requestAnimationFrame(() => {
        this.style.setProperty('--rot-x', `0deg`)
        this.style.setProperty('--rot-y', `0deg`)
      })
    }
  }

  customElements.define('hero-card', HeroCard);
</script>
