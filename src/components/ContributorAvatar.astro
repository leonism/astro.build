---
const {obj, size, type} = Astro.props;
let color, label, shadow;
switch (type) {
  case 'staff':
    shadow = 'shadow-red-500';
    color= 'bg-red-500';
    label= 'Staff';
    break;
  case 'l3':
  shadow = 'shadow-purple-500';
    color= 'bg-purple-500';
    label= 'Core';
    break;
  case 'l2':
  shadow = 'shadow-blue-500';
    color= 'bg-blue-500';
    label= 'Maintainer';
    break;
    default: 
    color = 'none';
    break;
}
---
<a class="relative block" title={`@${obj.login}`} href={obj.html_url}>
  <div class:list={["overflow-hidden rounded-full", shadow]} style={`
    box-shadow: 
    0px 0px 4px 0px var(--tw-shadow-color);`}>
    <div class="avatar-image" style={`
        width: ${size}px;
        height: ${size}px;
        background-image: url("${obj.avatar_url}"); `}>
    </div>
  </div>
  {label && <div class:list={['absolute bottom-0 -right-1.5 text-xs text-neutral-50 font-semibold rounded-md py-0.5 px-1.5', color]}>{label}</div>}
</a>

<style>
.avatar-image {
    background-size: 100% 100%;
    background-position: center center;
    transition: background-size 400ms ease-out, filter 200ms ease-out;
}
</style>