---
import { Image } from '@astrojs/image/components'
import { Sprite } from 'astro-icon'
import type { Integration } from '../types.js'

export interface Props {
    integration: Integration
}

const { integration } = Astro.props as Props

const formatter = Intl.NumberFormat('en', { notation: 'compact' })

const downloads =
    !!integration.downloads && formatter.format(integration.downloads)

const colors = [
    'text-blue-500/40',
    'text-red-500/40',
    'text-yellow-500/40',
    'text-purple-500/40'
]

const icons = [
    { pack: 'icon-park-outline', name: 'block-one' },
    { pack: 'icon-park-outline', name: 'block-two' },
    { pack: 'icon-park-outline', name: 'block-three' },
    { pack: 'icon-park-outline', name: 'block-four' },
    { pack: 'icon-park-outline', name: 'block-five' },
    { pack: 'icon-park-outline', name: 'block-six' },
    { pack: 'icon-park-outline', name: 'block-seven' },
    { pack: 'icon-park-outline', name: 'block-eight' },
    { pack: 'icon-park-outline', name: 'block-nine' },
    { pack: 'icon-park-outline', name: 'block-ten' }
]

function randomColor() {
    return colors[Math.floor(Math.random() * colors.length)]
}

function randomIcon() {
    return icons[Math.floor(Math.random() * icons.length)]
}
---

<article
    class="relative p-4 bg-neutral-50 rounded-lg shadow shadow-sky-200 border border-primary-300 hover:border-primary-400 hover:shadow-accent-300 isolate"
>
    <a
        href={integration.url?.href}
        class="absolute inset-0 z-10"
        target="_blank"
    >
        <span class="sr-only">Learn more about {integration.title}</span>
    </a>

    <div
        class:list={[
            'inline-block mr-auto icon mr-4',
            !integration.image && 'p-2 rounded-full border-2 border-primary-100'
        ]}
        aria-hidden="true"
    >
        {integration.image ? (
            <img
                src={integration.image.src}
                alt={integration.image.alt}
                class="h-[2.5em] w-[2.5em] object-contain"
            />
        ) : (
            <Sprite {...randomIcon()} size="2em" class={randomColor()} />
        )}
    </div>

    <h3 class="flex items-center gap-2 pt-2 font-bold font-display break-word">
        <span>{integration.title}</span>
        {integration.official && (
            <Sprite
                pack="heroicons-solid"
                name="badge-check"
                size={20}
                class="text-blue-600"
                aria-label="Official Integration"
            />
        )}
    </h3>

    <p class="flex-1 text-sm line-clamp-2">
        {integration.description}
    </p>

    {downloads && (
        <a
            href={integration.npmUrl?.href}
            target="_blank"
            rel="noopener noreferrer"
            class="z-20 flex items-center inline-block text-sm justify-self-end subtle gap-x-1"
        >
            <span class="sr-only">{downloads} weekly downloads</span>
            <Sprite
                pack="heroicons-outline"
                name="download"
                size="1.25em"
                aria-hidden="true"
            />
            <span aria-hidden="true">{downloads}</span>
        </a>
    )}
</article>

<style>
    /* Add margin to package avatars to match border and padding in placeholder icons */
    img {
        margin: calc(0.25rem + 2px);
    }

    article {
        display: grid;
        grid-template-rows: auto auto 1fr;
        grid-template-columns: auto 1fr;
        grid-template-areas:
            'icon stars'
            'title title'
            'description description';
        row-gap: 0.5rem;
        /* Outline only visible for high contrast users */
        outline: 1px solid transparent;
    }

    .icon {
        grid-area: icon;
    }

    h3 {
        grid-area: title;
    }

    ul {
        grid-area: badges;
    }

    p {
        grid-area: description;
        align-self: start;
    }
</style>
